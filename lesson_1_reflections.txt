How did viewing a diff between two versions help you spot the bug?
1. because maybe the old one was working while the new one is not and 
is a typo which i can find with diff.
2. because maybe by seeing the code I previously wrote I get the idea
what i was trying to do in the new one.

How could having easy access to the entire history of a file make you more efficient programmer in the long term?
1. because maybe I need a piece of code that was there in old version.
2. because I can figure out why I added some piece of code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros
------------------
1. if you develop feature wise it will be easy to remove a feature by removing a commit
2. it can help you how a particular task is accomplished
Cons
------------------
1. if you don't take care of commit on feature basis you will end up having a un useful version history.

Why do you think some version control systems, like Git, allow saving multiple files  in one commit, while others, like Google Docs, treat each file seperately?
Normally in software development multiple files are affected for making a feature or doing a bug fix. so git is the better option while in normal scenerio the docs you store on google docs are not related to each other so maintaining that files history is right.

How might using version control make you more confident to make changes that could break something?
Because I know I can come back to history I am confident to make changes that could break something.

Now that you have your workspace set up, what do you want to try using Git for?
enhancement,testing,bugfixing